@page "/files"
@using Nekrasov.Demo.Dto.ViewModel
@inject HttpClient Http

<h1>Single file</h1>

<p>A single file uploads automatically on file selection</p>

<InputFile OnChange="HandleSelection" />

@if(_file == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p class='@_file.Title.Class'><em>@_file.Title.Text</em></p>
}

@if (_file?.Movies != null && _file.Movies.Length > 0)
{
    <table class="table table-bordered table-sm">
        <thead>
        <tr>
            <th>Number</th>
            <th>Movie Name</th>
            <th>Size, Mb</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var movie in _file.Movies)
        {
            <tr>
                <td>@movie.Number</td>
                <td>@movie.Name</td>
                <td>@movie.SizeInMb</td>
            </tr>
        }
        </tbody>
    </table>

}


@code {

    FileViewModel _file;

    protected override async Task OnInitializedAsync()
    {
        await Task.CompletedTask;

        _file = new FileViewModel
        {
            Title = new Title{Text = "Это пробный текст", IsWarning=true},
            Movies = new Movie[]
            {
                new Movie{Name="movie.mp4", Number="1", SizeInMb="123.45 Mb"}
            }
        };
    }

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

@*            _status = $"Finished loading {file.Size} bytes from {file.Name}";
*@            _file.Title.Text = $"Finished loading {file.Size} bytes from {file.Name}";
            _file.Title.IsWarning = false;
        }
    }
}