@page "/singlefile"
@using Nekrasov.Demo.Dto.ViewModel
@using System.IO
@inject HttpClient Http

<h1>Single file</h1>

<p>A single file uploads automatically on file selection</p>

<InputFile OnChange="HandleSelection"/>
<p style="margin-bottom: 20px">@_status</p>

@if (_files == null)
{
    <p><em>Loading...</em></p>
}
else if (_files.Length == 0)
{
    <p><em>Please, upload .pptx file</em></p>
}
else
{
    @foreach (var file in _files)
    {
        <p class='@file.Title.Class'><em>@file.Title.Text</em></p>
        @if (file?.Movies != null && file.Movies.Length > 0)
        {
            <table class="table table-bordered table-sm">
                <thead>
                <tr>
                    <th>Number</th>
                    <th>Movie Name</th>
                    <th>Size, Mb</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var movie in file.Movies)
                {
                    <tr>
                        <td>@movie.Number</td>
                        <td>@movie.Name</td>
                        <td>@movie.SizeInKb</td>
                    </tr>
                }
                </tbody>
            </table>
        }
        else
        {
            <p><em>The file does not contain video</em></p>
        }
    }
}

@code {

    private FileViewModel[] _files;
    private string _status;

    protected override async Task OnInitializedAsync()
    {
        _files = await Http.GetFromJsonAsync<FileViewModel[]>("Presentations");
    }

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            _files = null;

            await using var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

            var content = new MultipartFormDataContent
        {{ new ByteArrayContent(ms.GetBuffer()), "\"upload\"", file.Name }};

            var responce = await Http.PostAsync("Presentations", content);

            _status = responce.IsSuccessStatusCode 
                ? $"Finished loading {file.Size} bytes from {file.Name}" 
                : "An error has occurred. try later";
        }
        _files = await Http.GetFromJsonAsync<FileViewModel[]>("Presentations");
    }
}